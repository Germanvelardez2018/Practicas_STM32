ARM GAS  /tmp/ccZM4jid.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB135:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccZM4jid.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** UART_HandleTypeDef huart1;
  45:Core/Src/main.c **** UART_HandleTypeDef huart2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_TIM1_Init(void);
  55:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  56:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE END 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Core/Src/main.c ****   HAL_Init();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Configure the system clock */
  86:Core/Src/main.c ****   SystemClock_Config();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccZM4jid.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Initialize all configured peripherals */
  93:Core/Src/main.c ****   MX_GPIO_Init();
  94:Core/Src/main.c ****   MX_TIM1_Init();
  95:Core/Src/main.c ****   MX_USART1_UART_Init();
  96:Core/Src/main.c ****   MX_USART2_UART_Init();
  97:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Infinite loop */
 102:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 103:Core/Src/main.c ****   while (1)
 104:Core/Src/main.c ****   {
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     HAL_Delay(100);
 107:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED4_GPIO_Port,LED4_Pin);
 108:Core/Src/main.c ****     /* USER CODE END WHILE */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 111:Core/Src/main.c ****   }
 112:Core/Src/main.c ****   /* USER CODE END 3 */
 113:Core/Src/main.c **** }
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /**
 116:Core/Src/main.c ****   * @brief System Clock Configuration
 117:Core/Src/main.c ****   * @retval None
 118:Core/Src/main.c ****   */
 119:Core/Src/main.c **** void SystemClock_Config(void)
 120:Core/Src/main.c **** {
 121:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 130:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 80;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 141:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 142:Core/Src/main.c ****   {
 143:Core/Src/main.c ****     Error_Handler();
 144:Core/Src/main.c ****   }
 145:Core/Src/main.c **** 
ARM GAS  /tmp/ccZM4jid.s 			page 4


 146:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 147:Core/Src/main.c ****   */
 148:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 149:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 156:Core/Src/main.c ****   {
 157:Core/Src/main.c ****     Error_Handler();
 158:Core/Src/main.c ****   }
 159:Core/Src/main.c **** }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /**
 162:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 163:Core/Src/main.c ****   * @param None
 164:Core/Src/main.c ****   * @retval None
 165:Core/Src/main.c ****   */
 166:Core/Src/main.c **** static void MX_TIM1_Init(void)
 167:Core/Src/main.c **** {
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 174:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 179:Core/Src/main.c ****   htim1.Instance = TIM1;
 180:Core/Src/main.c ****   htim1.Init.Prescaler = 20000;
 181:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 182:Core/Src/main.c ****   htim1.Init.Period = 1000;
 183:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 184:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 185:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 186:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 191:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 196:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 197:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****     Error_Handler();
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 202:Core/Src/main.c **** 
ARM GAS  /tmp/ccZM4jid.s 			page 5


 203:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /**
 208:Core/Src/main.c ****   * @brief USART1 Initialization Function
 209:Core/Src/main.c ****   * @param None
 210:Core/Src/main.c ****   * @retval None
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 213:Core/Src/main.c **** {
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 222:Core/Src/main.c ****   huart1.Instance = USART1;
 223:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 224:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 225:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 226:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 227:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 228:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 229:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 230:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** }
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /**
 241:Core/Src/main.c ****   * @brief USART2 Initialization Function
 242:Core/Src/main.c ****   * @param None
 243:Core/Src/main.c ****   * @retval None
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 246:Core/Src/main.c **** {
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 255:Core/Src/main.c ****   huart2.Instance = USART2;
 256:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 257:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 258:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 259:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
ARM GAS  /tmp/ccZM4jid.s 			page 6


 260:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 261:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 262:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 263:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****     Error_Handler();
 266:Core/Src/main.c ****   }
 267:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****   * @brief GPIO Initialization Function
 275:Core/Src/main.c ****   * @param None
 276:Core/Src/main.c ****   * @retval None
 277:Core/Src/main.c ****   */
 278:Core/Src/main.c **** static void MX_GPIO_Init(void)
 279:Core/Src/main.c **** {
  28              		.loc 1 279 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 280:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 280 3 view .LVU1
  43              		.loc 1 280 20 is_stmt 0 view .LVU2
  44 0004 0024     		movs	r4, #0
  45 0006 0394     		str	r4, [sp, #12]
  46 0008 0494     		str	r4, [sp, #16]
  47 000a 0594     		str	r4, [sp, #20]
  48 000c 0694     		str	r4, [sp, #24]
  49 000e 0794     		str	r4, [sp, #28]
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 283:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 283 3 is_stmt 1 view .LVU3
  51              	.LBB4:
  52              		.loc 1 283 3 view .LVU4
  53 0010 0194     		str	r4, [sp, #4]
  54              		.loc 1 283 3 view .LVU5
  55 0012 184B     		ldr	r3, .L3
  56 0014 1A6B     		ldr	r2, [r3, #48]
  57 0016 42F00102 		orr	r2, r2, #1
  58 001a 1A63     		str	r2, [r3, #48]
  59              		.loc 1 283 3 view .LVU6
  60 001c 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccZM4jid.s 			page 7


  61 001e 02F00102 		and	r2, r2, #1
  62 0022 0192     		str	r2, [sp, #4]
  63              		.loc 1 283 3 view .LVU7
  64 0024 019A     		ldr	r2, [sp, #4]
  65              	.LBE4:
  66              		.loc 1 283 3 view .LVU8
 284:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  67              		.loc 1 284 3 view .LVU9
  68              	.LBB5:
  69              		.loc 1 284 3 view .LVU10
  70 0026 0294     		str	r4, [sp, #8]
  71              		.loc 1 284 3 view .LVU11
  72 0028 1A6B     		ldr	r2, [r3, #48]
  73 002a 42F00802 		orr	r2, r2, #8
  74 002e 1A63     		str	r2, [r3, #48]
  75              		.loc 1 284 3 view .LVU12
  76 0030 1B6B     		ldr	r3, [r3, #48]
  77 0032 03F00803 		and	r3, r3, #8
  78 0036 0293     		str	r3, [sp, #8]
  79              		.loc 1 284 3 view .LVU13
  80 0038 029B     		ldr	r3, [sp, #8]
  81              	.LBE5:
  82              		.loc 1 284 3 view .LVU14
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 287:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, LED1_Pin|LED2_Pin|LED3_Pin|LED4_Pin, GPIO_PIN_RESET);
  83              		.loc 1 287 3 view .LVU15
  84 003a 0F4D     		ldr	r5, .L3+4
  85 003c 2246     		mov	r2, r4
  86 003e 4FF4F041 		mov	r1, #30720
  87 0042 2846     		mov	r0, r5
  88 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
  89              	.LVL0:
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /*Configure GPIO pin : USER_BUTTON_Pin */
 290:Core/Src/main.c ****   GPIO_InitStruct.Pin = USER_BUTTON_Pin;
  90              		.loc 1 290 3 view .LVU16
  91              		.loc 1 290 23 is_stmt 0 view .LVU17
  92 0048 0126     		movs	r6, #1
  93 004a 0396     		str	r6, [sp, #12]
 291:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  94              		.loc 1 291 3 is_stmt 1 view .LVU18
  95              		.loc 1 291 24 is_stmt 0 view .LVU19
  96 004c 4FF48813 		mov	r3, #1114112
  97 0050 0493     		str	r3, [sp, #16]
 292:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  98              		.loc 1 292 3 is_stmt 1 view .LVU20
  99              		.loc 1 292 24 is_stmt 0 view .LVU21
 100 0052 0594     		str	r4, [sp, #20]
 293:Core/Src/main.c ****   HAL_GPIO_Init(USER_BUTTON_GPIO_Port, &GPIO_InitStruct);
 101              		.loc 1 293 3 is_stmt 1 view .LVU22
 102 0054 03A9     		add	r1, sp, #12
 103 0056 0948     		ldr	r0, .L3+8
 104 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 105              	.LVL1:
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /*Configure GPIO pins : LED1_Pin LED2_Pin LED3_Pin LED4_Pin */
ARM GAS  /tmp/ccZM4jid.s 			page 8


 296:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED1_Pin|LED2_Pin|LED3_Pin|LED4_Pin;
 106              		.loc 1 296 3 view .LVU23
 107              		.loc 1 296 23 is_stmt 0 view .LVU24
 108 005c 4FF4F043 		mov	r3, #30720
 109 0060 0393     		str	r3, [sp, #12]
 297:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 110              		.loc 1 297 3 is_stmt 1 view .LVU25
 111              		.loc 1 297 24 is_stmt 0 view .LVU26
 112 0062 0496     		str	r6, [sp, #16]
 298:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 113              		.loc 1 298 3 is_stmt 1 view .LVU27
 114              		.loc 1 298 24 is_stmt 0 view .LVU28
 115 0064 0594     		str	r4, [sp, #20]
 299:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 116              		.loc 1 299 3 is_stmt 1 view .LVU29
 117              		.loc 1 299 25 is_stmt 0 view .LVU30
 118 0066 0694     		str	r4, [sp, #24]
 300:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 119              		.loc 1 300 3 is_stmt 1 view .LVU31
 120 0068 03A9     		add	r1, sp, #12
 121 006a 2846     		mov	r0, r5
 122 006c FFF7FEFF 		bl	HAL_GPIO_Init
 123              	.LVL2:
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** }
 124              		.loc 1 302 1 is_stmt 0 view .LVU32
 125 0070 08B0     		add	sp, sp, #32
 126              	.LCFI2:
 127              		.cfi_def_cfa_offset 16
 128              		@ sp needed
 129 0072 70BD     		pop	{r4, r5, r6, pc}
 130              	.L4:
 131              		.align	2
 132              	.L3:
 133 0074 00380240 		.word	1073887232
 134 0078 000C0240 		.word	1073875968
 135 007c 00000240 		.word	1073872896
 136              		.cfi_endproc
 137              	.LFE135:
 139              		.section	.text.Error_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	Error_Handler
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	Error_Handler:
 147              	.LFB136:
 303:Core/Src/main.c **** 
 304:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** /* USER CODE END 4 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** /**
 309:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 310:Core/Src/main.c ****   * @retval None
 311:Core/Src/main.c ****   */
 312:Core/Src/main.c **** void Error_Handler(void)
ARM GAS  /tmp/ccZM4jid.s 			page 9


 313:Core/Src/main.c **** {
 148              		.loc 1 313 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ Volatile: function does not return.
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 314:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 315:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 316:Core/Src/main.c ****   __disable_irq();
 154              		.loc 1 316 3 view .LVU34
 155              	.LBB6:
 156              	.LBI6:
 157              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
ARM GAS  /tmp/ccZM4jid.s 			page 10


  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
ARM GAS  /tmp/ccZM4jid.s 			page 11


 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 158              		.loc 2 140 27 view .LVU35
 159              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 160              		.loc 2 142 3 view .LVU36
 161              		.syntax unified
 162              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 163 0000 72B6     		cpsid i
 164              	@ 0 "" 2
 165              		.thumb
 166              		.syntax unified
 167              	.L6:
 168              	.LBE7:
 169              	.LBE6:
 317:Core/Src/main.c ****   while (1)
 170              		.loc 1 317 3 discriminator 1 view .LVU37
 318:Core/Src/main.c ****   {
ARM GAS  /tmp/ccZM4jid.s 			page 12


 319:Core/Src/main.c ****   }
 171              		.loc 1 319 3 discriminator 1 view .LVU38
 317:Core/Src/main.c ****   while (1)
 172              		.loc 1 317 9 discriminator 1 view .LVU39
 173 0002 FEE7     		b	.L6
 174              		.cfi_endproc
 175              	.LFE136:
 177              		.section	.text.MX_TIM1_Init,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 183              	MX_TIM1_Init:
 184              	.LFB132:
 167:Core/Src/main.c **** 
 185              		.loc 1 167 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 24
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 00B5     		push	{lr}
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 14, -4
 193 0002 87B0     		sub	sp, sp, #28
 194              	.LCFI4:
 195              		.cfi_def_cfa_offset 32
 173:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 196              		.loc 1 173 3 view .LVU41
 173:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 197              		.loc 1 173 26 is_stmt 0 view .LVU42
 198 0004 0023     		movs	r3, #0
 199 0006 0293     		str	r3, [sp, #8]
 200 0008 0393     		str	r3, [sp, #12]
 201 000a 0493     		str	r3, [sp, #16]
 202 000c 0593     		str	r3, [sp, #20]
 174:Core/Src/main.c **** 
 203              		.loc 1 174 3 is_stmt 1 view .LVU43
 174:Core/Src/main.c **** 
 204              		.loc 1 174 27 is_stmt 0 view .LVU44
 205 000e 0093     		str	r3, [sp]
 206 0010 0193     		str	r3, [sp, #4]
 179:Core/Src/main.c ****   htim1.Init.Prescaler = 20000;
 207              		.loc 1 179 3 is_stmt 1 view .LVU45
 179:Core/Src/main.c ****   htim1.Init.Prescaler = 20000;
 208              		.loc 1 179 18 is_stmt 0 view .LVU46
 209 0012 1448     		ldr	r0, .L15
 210 0014 144A     		ldr	r2, .L15+4
 211 0016 0260     		str	r2, [r0]
 180:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 212              		.loc 1 180 3 is_stmt 1 view .LVU47
 180:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 213              		.loc 1 180 24 is_stmt 0 view .LVU48
 214 0018 44F62062 		movw	r2, #20000
 215 001c 4260     		str	r2, [r0, #4]
 181:Core/Src/main.c ****   htim1.Init.Period = 1000;
 216              		.loc 1 181 3 is_stmt 1 view .LVU49
 181:Core/Src/main.c ****   htim1.Init.Period = 1000;
ARM GAS  /tmp/ccZM4jid.s 			page 13


 217              		.loc 1 181 26 is_stmt 0 view .LVU50
 218 001e 8360     		str	r3, [r0, #8]
 182:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 219              		.loc 1 182 3 is_stmt 1 view .LVU51
 182:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 220              		.loc 1 182 21 is_stmt 0 view .LVU52
 221 0020 4FF47A72 		mov	r2, #1000
 222 0024 C260     		str	r2, [r0, #12]
 183:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 223              		.loc 1 183 3 is_stmt 1 view .LVU53
 183:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 224              		.loc 1 183 28 is_stmt 0 view .LVU54
 225 0026 0361     		str	r3, [r0, #16]
 184:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 226              		.loc 1 184 3 is_stmt 1 view .LVU55
 184:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 227              		.loc 1 184 32 is_stmt 0 view .LVU56
 228 0028 4361     		str	r3, [r0, #20]
 185:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 229              		.loc 1 185 3 is_stmt 1 view .LVU57
 185:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 230              		.loc 1 185 32 is_stmt 0 view .LVU58
 231 002a 8361     		str	r3, [r0, #24]
 186:Core/Src/main.c ****   {
 232              		.loc 1 186 3 is_stmt 1 view .LVU59
 186:Core/Src/main.c ****   {
 233              		.loc 1 186 7 is_stmt 0 view .LVU60
 234 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 235              	.LVL3:
 186:Core/Src/main.c ****   {
 236              		.loc 1 186 6 view .LVU61
 237 0030 90B9     		cbnz	r0, .L12
 190:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 238              		.loc 1 190 3 is_stmt 1 view .LVU62
 190:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 239              		.loc 1 190 34 is_stmt 0 view .LVU63
 240 0032 4FF48053 		mov	r3, #4096
 241 0036 0293     		str	r3, [sp, #8]
 191:Core/Src/main.c ****   {
 242              		.loc 1 191 3 is_stmt 1 view .LVU64
 191:Core/Src/main.c ****   {
 243              		.loc 1 191 7 is_stmt 0 view .LVU65
 244 0038 02A9     		add	r1, sp, #8
 245 003a 0A48     		ldr	r0, .L15
 246 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 247              	.LVL4:
 191:Core/Src/main.c ****   {
 248              		.loc 1 191 6 view .LVU66
 249 0040 60B9     		cbnz	r0, .L13
 195:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 250              		.loc 1 195 3 is_stmt 1 view .LVU67
 195:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 251              		.loc 1 195 37 is_stmt 0 view .LVU68
 252 0042 0023     		movs	r3, #0
 253 0044 0093     		str	r3, [sp]
 196:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 254              		.loc 1 196 3 is_stmt 1 view .LVU69
ARM GAS  /tmp/ccZM4jid.s 			page 14


 196:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 255              		.loc 1 196 33 is_stmt 0 view .LVU70
 256 0046 0193     		str	r3, [sp, #4]
 197:Core/Src/main.c ****   {
 257              		.loc 1 197 3 is_stmt 1 view .LVU71
 197:Core/Src/main.c ****   {
 258              		.loc 1 197 7 is_stmt 0 view .LVU72
 259 0048 6946     		mov	r1, sp
 260 004a 0648     		ldr	r0, .L15
 261 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 262              	.LVL5:
 197:Core/Src/main.c ****   {
 263              		.loc 1 197 6 view .LVU73
 264 0050 30B9     		cbnz	r0, .L14
 205:Core/Src/main.c **** 
 265              		.loc 1 205 1 view .LVU74
 266 0052 07B0     		add	sp, sp, #28
 267              	.LCFI5:
 268              		.cfi_remember_state
 269              		.cfi_def_cfa_offset 4
 270              		@ sp needed
 271 0054 5DF804FB 		ldr	pc, [sp], #4
 272              	.L12:
 273              	.LCFI6:
 274              		.cfi_restore_state
 188:Core/Src/main.c ****   }
 275              		.loc 1 188 5 is_stmt 1 view .LVU75
 276 0058 FFF7FEFF 		bl	Error_Handler
 277              	.LVL6:
 278              	.L13:
 193:Core/Src/main.c ****   }
 279              		.loc 1 193 5 view .LVU76
 280 005c FFF7FEFF 		bl	Error_Handler
 281              	.LVL7:
 282              	.L14:
 199:Core/Src/main.c ****   }
 283              		.loc 1 199 5 view .LVU77
 284 0060 FFF7FEFF 		bl	Error_Handler
 285              	.LVL8:
 286              	.L16:
 287              		.align	2
 288              	.L15:
 289 0064 00000000 		.word	.LANCHOR0
 290 0068 00000140 		.word	1073807360
 291              		.cfi_endproc
 292              	.LFE132:
 294              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 295              		.align	1
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	MX_USART1_UART_Init:
 301              	.LFB133:
 213:Core/Src/main.c **** 
 302              		.loc 1 213 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccZM4jid.s 			page 15


 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306 0000 08B5     		push	{r3, lr}
 307              	.LCFI7:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 3, -8
 310              		.cfi_offset 14, -4
 222:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 311              		.loc 1 222 3 view .LVU79
 222:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 312              		.loc 1 222 19 is_stmt 0 view .LVU80
 313 0002 0A48     		ldr	r0, .L21
 314 0004 0A4B     		ldr	r3, .L21+4
 315 0006 0360     		str	r3, [r0]
 223:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 316              		.loc 1 223 3 is_stmt 1 view .LVU81
 223:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 317              		.loc 1 223 24 is_stmt 0 view .LVU82
 318 0008 4FF4E133 		mov	r3, #115200
 319 000c 4360     		str	r3, [r0, #4]
 224:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 320              		.loc 1 224 3 is_stmt 1 view .LVU83
 224:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 321              		.loc 1 224 26 is_stmt 0 view .LVU84
 322 000e 0023     		movs	r3, #0
 323 0010 8360     		str	r3, [r0, #8]
 225:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 324              		.loc 1 225 3 is_stmt 1 view .LVU85
 225:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 325              		.loc 1 225 24 is_stmt 0 view .LVU86
 326 0012 C360     		str	r3, [r0, #12]
 226:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 327              		.loc 1 226 3 is_stmt 1 view .LVU87
 226:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 328              		.loc 1 226 22 is_stmt 0 view .LVU88
 329 0014 0361     		str	r3, [r0, #16]
 227:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 330              		.loc 1 227 3 is_stmt 1 view .LVU89
 227:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 331              		.loc 1 227 20 is_stmt 0 view .LVU90
 332 0016 0C22     		movs	r2, #12
 333 0018 4261     		str	r2, [r0, #20]
 228:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 334              		.loc 1 228 3 is_stmt 1 view .LVU91
 228:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 335              		.loc 1 228 25 is_stmt 0 view .LVU92
 336 001a 8361     		str	r3, [r0, #24]
 229:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 337              		.loc 1 229 3 is_stmt 1 view .LVU93
 229:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 338              		.loc 1 229 28 is_stmt 0 view .LVU94
 339 001c C361     		str	r3, [r0, #28]
 230:Core/Src/main.c ****   {
 340              		.loc 1 230 3 is_stmt 1 view .LVU95
 230:Core/Src/main.c ****   {
 341              		.loc 1 230 7 is_stmt 0 view .LVU96
 342 001e FFF7FEFF 		bl	HAL_UART_Init
 343              	.LVL9:
ARM GAS  /tmp/ccZM4jid.s 			page 16


 230:Core/Src/main.c ****   {
 344              		.loc 1 230 6 view .LVU97
 345 0022 00B9     		cbnz	r0, .L20
 238:Core/Src/main.c **** 
 346              		.loc 1 238 1 view .LVU98
 347 0024 08BD     		pop	{r3, pc}
 348              	.L20:
 232:Core/Src/main.c ****   }
 349              		.loc 1 232 5 is_stmt 1 view .LVU99
 350 0026 FFF7FEFF 		bl	Error_Handler
 351              	.LVL10:
 352              	.L22:
 353 002a 00BF     		.align	2
 354              	.L21:
 355 002c 00000000 		.word	.LANCHOR1
 356 0030 00100140 		.word	1073811456
 357              		.cfi_endproc
 358              	.LFE133:
 360              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 361              		.align	1
 362              		.syntax unified
 363              		.thumb
 364              		.thumb_func
 366              	MX_USART2_UART_Init:
 367              	.LFB134:
 246:Core/Src/main.c **** 
 368              		.loc 1 246 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 08B5     		push	{r3, lr}
 373              	.LCFI8:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 3, -8
 376              		.cfi_offset 14, -4
 255:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 377              		.loc 1 255 3 view .LVU101
 255:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 378              		.loc 1 255 19 is_stmt 0 view .LVU102
 379 0002 0A48     		ldr	r0, .L27
 380 0004 0A4B     		ldr	r3, .L27+4
 381 0006 0360     		str	r3, [r0]
 256:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 382              		.loc 1 256 3 is_stmt 1 view .LVU103
 256:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 383              		.loc 1 256 24 is_stmt 0 view .LVU104
 384 0008 4FF4E133 		mov	r3, #115200
 385 000c 4360     		str	r3, [r0, #4]
 257:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 386              		.loc 1 257 3 is_stmt 1 view .LVU105
 257:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 387              		.loc 1 257 26 is_stmt 0 view .LVU106
 388 000e 0023     		movs	r3, #0
 389 0010 8360     		str	r3, [r0, #8]
 258:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 390              		.loc 1 258 3 is_stmt 1 view .LVU107
 258:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
ARM GAS  /tmp/ccZM4jid.s 			page 17


 391              		.loc 1 258 24 is_stmt 0 view .LVU108
 392 0012 C360     		str	r3, [r0, #12]
 259:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 393              		.loc 1 259 3 is_stmt 1 view .LVU109
 259:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 394              		.loc 1 259 22 is_stmt 0 view .LVU110
 395 0014 0361     		str	r3, [r0, #16]
 260:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 396              		.loc 1 260 3 is_stmt 1 view .LVU111
 260:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 397              		.loc 1 260 20 is_stmt 0 view .LVU112
 398 0016 0C22     		movs	r2, #12
 399 0018 4261     		str	r2, [r0, #20]
 261:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 400              		.loc 1 261 3 is_stmt 1 view .LVU113
 261:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 401              		.loc 1 261 25 is_stmt 0 view .LVU114
 402 001a 8361     		str	r3, [r0, #24]
 262:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 403              		.loc 1 262 3 is_stmt 1 view .LVU115
 262:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 404              		.loc 1 262 28 is_stmt 0 view .LVU116
 405 001c C361     		str	r3, [r0, #28]
 263:Core/Src/main.c ****   {
 406              		.loc 1 263 3 is_stmt 1 view .LVU117
 263:Core/Src/main.c ****   {
 407              		.loc 1 263 7 is_stmt 0 view .LVU118
 408 001e FFF7FEFF 		bl	HAL_UART_Init
 409              	.LVL11:
 263:Core/Src/main.c ****   {
 410              		.loc 1 263 6 view .LVU119
 411 0022 00B9     		cbnz	r0, .L26
 271:Core/Src/main.c **** 
 412              		.loc 1 271 1 view .LVU120
 413 0024 08BD     		pop	{r3, pc}
 414              	.L26:
 265:Core/Src/main.c ****   }
 415              		.loc 1 265 5 is_stmt 1 view .LVU121
 416 0026 FFF7FEFF 		bl	Error_Handler
 417              	.LVL12:
 418              	.L28:
 419 002a 00BF     		.align	2
 420              	.L27:
 421 002c 00000000 		.word	.LANCHOR2
 422 0030 00440040 		.word	1073759232
 423              		.cfi_endproc
 424              	.LFE134:
 426              		.section	.text.SystemClock_Config,"ax",%progbits
 427              		.align	1
 428              		.global	SystemClock_Config
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 433              	SystemClock_Config:
 434              	.LFB131:
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 435              		.loc 1 120 1 view -0
ARM GAS  /tmp/ccZM4jid.s 			page 18


 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 80
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439 0000 00B5     		push	{lr}
 440              	.LCFI9:
 441              		.cfi_def_cfa_offset 4
 442              		.cfi_offset 14, -4
 443 0002 95B0     		sub	sp, sp, #84
 444              	.LCFI10:
 445              		.cfi_def_cfa_offset 88
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 446              		.loc 1 121 3 view .LVU123
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 447              		.loc 1 121 22 is_stmt 0 view .LVU124
 448 0004 3022     		movs	r2, #48
 449 0006 0021     		movs	r1, #0
 450 0008 08A8     		add	r0, sp, #32
 451 000a FFF7FEFF 		bl	memset
 452              	.LVL13:
 122:Core/Src/main.c **** 
 453              		.loc 1 122 3 is_stmt 1 view .LVU125
 122:Core/Src/main.c **** 
 454              		.loc 1 122 22 is_stmt 0 view .LVU126
 455 000e 0023     		movs	r3, #0
 456 0010 0393     		str	r3, [sp, #12]
 457 0012 0493     		str	r3, [sp, #16]
 458 0014 0593     		str	r3, [sp, #20]
 459 0016 0693     		str	r3, [sp, #24]
 460 0018 0793     		str	r3, [sp, #28]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 461              		.loc 1 126 3 is_stmt 1 view .LVU127
 462              	.LBB8:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 463              		.loc 1 126 3 view .LVU128
 464 001a 0193     		str	r3, [sp, #4]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 465              		.loc 1 126 3 view .LVU129
 466 001c 1D4A     		ldr	r2, .L35
 467 001e 116C     		ldr	r1, [r2, #64]
 468 0020 41F08051 		orr	r1, r1, #268435456
 469 0024 1164     		str	r1, [r2, #64]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 470              		.loc 1 126 3 view .LVU130
 471 0026 126C     		ldr	r2, [r2, #64]
 472 0028 02F08052 		and	r2, r2, #268435456
 473 002c 0192     		str	r2, [sp, #4]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 474              		.loc 1 126 3 view .LVU131
 475 002e 019A     		ldr	r2, [sp, #4]
 476              	.LBE8:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 477              		.loc 1 126 3 view .LVU132
 127:Core/Src/main.c **** 
 478              		.loc 1 127 3 view .LVU133
 479              	.LBB9:
 127:Core/Src/main.c **** 
 480              		.loc 1 127 3 view .LVU134
ARM GAS  /tmp/ccZM4jid.s 			page 19


 481 0030 0293     		str	r3, [sp, #8]
 127:Core/Src/main.c **** 
 482              		.loc 1 127 3 view .LVU135
 483 0032 194A     		ldr	r2, .L35+4
 484 0034 1168     		ldr	r1, [r2]
 485 0036 41F48041 		orr	r1, r1, #16384
 486 003a 1160     		str	r1, [r2]
 127:Core/Src/main.c **** 
 487              		.loc 1 127 3 view .LVU136
 488 003c 1268     		ldr	r2, [r2]
 489 003e 02F48042 		and	r2, r2, #16384
 490 0042 0292     		str	r2, [sp, #8]
 127:Core/Src/main.c **** 
 491              		.loc 1 127 3 view .LVU137
 492 0044 029A     		ldr	r2, [sp, #8]
 493              	.LBE9:
 127:Core/Src/main.c **** 
 494              		.loc 1 127 3 view .LVU138
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 495              		.loc 1 132 3 view .LVU139
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 496              		.loc 1 132 36 is_stmt 0 view .LVU140
 497 0046 0222     		movs	r2, #2
 498 0048 0892     		str	r2, [sp, #32]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 499              		.loc 1 133 3 is_stmt 1 view .LVU141
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 500              		.loc 1 133 30 is_stmt 0 view .LVU142
 501 004a 0121     		movs	r1, #1
 502 004c 0B91     		str	r1, [sp, #44]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 503              		.loc 1 134 3 is_stmt 1 view .LVU143
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 504              		.loc 1 134 41 is_stmt 0 view .LVU144
 505 004e 1021     		movs	r1, #16
 506 0050 0C91     		str	r1, [sp, #48]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 507              		.loc 1 135 3 is_stmt 1 view .LVU145
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 508              		.loc 1 135 34 is_stmt 0 view .LVU146
 509 0052 0E92     		str	r2, [sp, #56]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 510              		.loc 1 136 3 is_stmt 1 view .LVU147
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 511              		.loc 1 136 35 is_stmt 0 view .LVU148
 512 0054 0F93     		str	r3, [sp, #60]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 80;
 513              		.loc 1 137 3 is_stmt 1 view .LVU149
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 80;
 514              		.loc 1 137 30 is_stmt 0 view .LVU150
 515 0056 0823     		movs	r3, #8
 516 0058 1093     		str	r3, [sp, #64]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 517              		.loc 1 138 3 is_stmt 1 view .LVU151
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 518              		.loc 1 138 30 is_stmt 0 view .LVU152
 519 005a 5023     		movs	r3, #80
ARM GAS  /tmp/ccZM4jid.s 			page 20


 520 005c 1193     		str	r3, [sp, #68]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 521              		.loc 1 139 3 is_stmt 1 view .LVU153
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 522              		.loc 1 139 30 is_stmt 0 view .LVU154
 523 005e 1292     		str	r2, [sp, #72]
 140:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 524              		.loc 1 140 3 is_stmt 1 view .LVU155
 140:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 525              		.loc 1 140 30 is_stmt 0 view .LVU156
 526 0060 0423     		movs	r3, #4
 527 0062 1393     		str	r3, [sp, #76]
 141:Core/Src/main.c ****   {
 528              		.loc 1 141 3 is_stmt 1 view .LVU157
 141:Core/Src/main.c ****   {
 529              		.loc 1 141 7 is_stmt 0 view .LVU158
 530 0064 08A8     		add	r0, sp, #32
 531 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 532              	.LVL14:
 141:Core/Src/main.c ****   {
 533              		.loc 1 141 6 view .LVU159
 534 006a 78B9     		cbnz	r0, .L33
 148:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 535              		.loc 1 148 3 is_stmt 1 view .LVU160
 148:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 536              		.loc 1 148 31 is_stmt 0 view .LVU161
 537 006c 0F23     		movs	r3, #15
 538 006e 0393     		str	r3, [sp, #12]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 539              		.loc 1 150 3 is_stmt 1 view .LVU162
 150:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 540              		.loc 1 150 34 is_stmt 0 view .LVU163
 541 0070 0223     		movs	r3, #2
 542 0072 0493     		str	r3, [sp, #16]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 543              		.loc 1 151 3 is_stmt 1 view .LVU164
 151:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 544              		.loc 1 151 35 is_stmt 0 view .LVU165
 545 0074 9023     		movs	r3, #144
 546 0076 0593     		str	r3, [sp, #20]
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 547              		.loc 1 152 3 is_stmt 1 view .LVU166
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 548              		.loc 1 152 36 is_stmt 0 view .LVU167
 549 0078 0021     		movs	r1, #0
 550 007a 0691     		str	r1, [sp, #24]
 153:Core/Src/main.c **** 
 551              		.loc 1 153 3 is_stmt 1 view .LVU168
 153:Core/Src/main.c **** 
 552              		.loc 1 153 36 is_stmt 0 view .LVU169
 553 007c 0791     		str	r1, [sp, #28]
 155:Core/Src/main.c ****   {
 554              		.loc 1 155 3 is_stmt 1 view .LVU170
 155:Core/Src/main.c ****   {
 555              		.loc 1 155 7 is_stmt 0 view .LVU171
 556 007e 03A8     		add	r0, sp, #12
 557 0080 FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  /tmp/ccZM4jid.s 			page 21


 558              	.LVL15:
 155:Core/Src/main.c ****   {
 559              		.loc 1 155 6 view .LVU172
 560 0084 20B9     		cbnz	r0, .L34
 159:Core/Src/main.c **** 
 561              		.loc 1 159 1 view .LVU173
 562 0086 15B0     		add	sp, sp, #84
 563              	.LCFI11:
 564              		.cfi_remember_state
 565              		.cfi_def_cfa_offset 4
 566              		@ sp needed
 567 0088 5DF804FB 		ldr	pc, [sp], #4
 568              	.L33:
 569              	.LCFI12:
 570              		.cfi_restore_state
 143:Core/Src/main.c ****   }
 571              		.loc 1 143 5 is_stmt 1 view .LVU174
 572 008c FFF7FEFF 		bl	Error_Handler
 573              	.LVL16:
 574              	.L34:
 157:Core/Src/main.c ****   }
 575              		.loc 1 157 5 view .LVU175
 576 0090 FFF7FEFF 		bl	Error_Handler
 577              	.LVL17:
 578              	.L36:
 579              		.align	2
 580              	.L35:
 581 0094 00380240 		.word	1073887232
 582 0098 00700040 		.word	1073770496
 583              		.cfi_endproc
 584              	.LFE131:
 586              		.section	.text.main,"ax",%progbits
 587              		.align	1
 588              		.global	main
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 593              	main:
 594              	.LFB130:
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 595              		.loc 1 71 1 view -0
 596              		.cfi_startproc
 597              		@ Volatile: function does not return.
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 08B5     		push	{r3, lr}
 601              	.LCFI13:
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 3, -8
 604              		.cfi_offset 14, -4
  79:Core/Src/main.c **** 
 605              		.loc 1 79 3 view .LVU177
 606 0002 FFF7FEFF 		bl	HAL_Init
 607              	.LVL18:
  86:Core/Src/main.c **** 
 608              		.loc 1 86 3 view .LVU178
 609 0006 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  /tmp/ccZM4jid.s 			page 22


 610              	.LVL19:
  93:Core/Src/main.c ****   MX_TIM1_Init();
 611              		.loc 1 93 3 view .LVU179
 612 000a FFF7FEFF 		bl	MX_GPIO_Init
 613              	.LVL20:
  94:Core/Src/main.c ****   MX_USART1_UART_Init();
 614              		.loc 1 94 3 view .LVU180
 615 000e FFF7FEFF 		bl	MX_TIM1_Init
 616              	.LVL21:
  95:Core/Src/main.c ****   MX_USART2_UART_Init();
 617              		.loc 1 95 3 view .LVU181
 618 0012 FFF7FEFF 		bl	MX_USART1_UART_Init
 619              	.LVL22:
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 620              		.loc 1 96 3 view .LVU182
 621 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 622              	.LVL23:
 623              	.L38:
 103:Core/Src/main.c ****   {
 624              		.loc 1 103 3 discriminator 1 view .LVU183
 106:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED4_GPIO_Port,LED4_Pin);
 625              		.loc 1 106 5 discriminator 1 view .LVU184
 626 001a 6420     		movs	r0, #100
 627 001c FFF7FEFF 		bl	HAL_Delay
 628              	.LVL24:
 107:Core/Src/main.c ****     /* USER CODE END WHILE */
 629              		.loc 1 107 5 discriminator 1 view .LVU185
 630 0020 4FF48041 		mov	r1, #16384
 631 0024 0148     		ldr	r0, .L40
 632 0026 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 633              	.LVL25:
 103:Core/Src/main.c ****   {
 634              		.loc 1 103 9 discriminator 1 view .LVU186
 635 002a F6E7     		b	.L38
 636              	.L41:
 637              		.align	2
 638              	.L40:
 639 002c 000C0240 		.word	1073875968
 640              		.cfi_endproc
 641              	.LFE130:
 643              		.global	huart2
 644              		.global	huart1
 645              		.global	htim1
 646              		.section	.bss.htim1,"aw",%nobits
 647              		.align	2
 648              		.set	.LANCHOR0,. + 0
 651              	htim1:
 652 0000 00000000 		.space	72
 652      00000000 
 652      00000000 
 652      00000000 
 652      00000000 
 653              		.section	.bss.huart1,"aw",%nobits
 654              		.align	2
 655              		.set	.LANCHOR1,. + 0
 658              	huart1:
 659 0000 00000000 		.space	68
ARM GAS  /tmp/ccZM4jid.s 			page 23


 659      00000000 
 659      00000000 
 659      00000000 
 659      00000000 
 660              		.section	.bss.huart2,"aw",%nobits
 661              		.align	2
 662              		.set	.LANCHOR2,. + 0
 665              	huart2:
 666 0000 00000000 		.space	68
 666      00000000 
 666      00000000 
 666      00000000 
 666      00000000 
 667              		.text
 668              	.Letext0:
 669              		.file 3 "/home/gvelardez/ARM_TOOLS/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_d
 670              		.file 4 "/home/gvelardez/ARM_TOOLS/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdin
 671              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 672              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 673              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 674              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 675              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 676              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 677              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 678              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 679              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 680              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 681              		.file 15 "<built-in>"
ARM GAS  /tmp/ccZM4jid.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccZM4jid.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccZM4jid.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccZM4jid.s:133    .text.MX_GPIO_Init:0000000000000074 $d
     /tmp/ccZM4jid.s:140    .text.Error_Handler:0000000000000000 $t
     /tmp/ccZM4jid.s:146    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccZM4jid.s:178    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccZM4jid.s:183    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccZM4jid.s:289    .text.MX_TIM1_Init:0000000000000064 $d
     /tmp/ccZM4jid.s:295    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccZM4jid.s:300    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccZM4jid.s:355    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccZM4jid.s:361    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccZM4jid.s:366    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccZM4jid.s:421    .text.MX_USART2_UART_Init:000000000000002c $d
     /tmp/ccZM4jid.s:427    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccZM4jid.s:433    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccZM4jid.s:581    .text.SystemClock_Config:0000000000000094 $d
     /tmp/ccZM4jid.s:587    .text.main:0000000000000000 $t
     /tmp/ccZM4jid.s:593    .text.main:0000000000000000 main
     /tmp/ccZM4jid.s:639    .text.main:000000000000002c $d
     /tmp/ccZM4jid.s:665    .bss.huart2:0000000000000000 huart2
     /tmp/ccZM4jid.s:658    .bss.huart1:0000000000000000 huart1
     /tmp/ccZM4jid.s:651    .bss.htim1:0000000000000000 htim1
     /tmp/ccZM4jid.s:647    .bss.htim1:0000000000000000 $d
     /tmp/ccZM4jid.s:654    .bss.huart1:0000000000000000 $d
     /tmp/ccZM4jid.s:661    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
HAL_GPIO_TogglePin
